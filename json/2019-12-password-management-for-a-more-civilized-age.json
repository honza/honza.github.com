{
    "reading_time": "3 minutes", 
    "month": "12", 
    "year": "2019", 
    "date": "December 04, 2019", 
    "slug": "password-management-for-a-more-civilized-age", 
    "contents": "<div class=\"section\" id=\"password-management-for-a-more-civilized-age\">\n<h1>Password Management For a More Civilized&nbsp;Age</h1>\n<p>It is a universally acknowledged truth that remembering your passwords is a bad\nidea.  The modern Internet user will inevitably be required to register for\nmany services, and websites, and inventing a new password for each one will\nquickly overwhelm him or her.  The burden of memorizing one&#8217;s passwords is too\ngreat to bear.  Unless, of course, we grant that passwords may be reused&#8212;that\nwe shall never do.  Once we are satisfied that keeping all of one&#8217;s passwords\nin one&#8217;s head is a bad idea, we shall proceed to delegating this task to\ncomputers.  If your computer is managing your passwords, you are free to use a\ndifferent one for every entity, and you are enabled and encouraged to create\nvery long and random&nbsp;passwords.</p>\n<p>Many solutions exist to address this need.  LastPass and 1Password come to\nmind.  However, most of these services store your data in the cloud, aren&#8217;t\nopen source, and cost&nbsp;money.</p>\n<p>Can we do&nbsp;better?</p>\n<p>Here are our&nbsp;requirements:</p>\n<ul class=\"simple\">\n<li>Encrypted storage of passwords (which enables easy&nbsp;backups)</li>\n<li>A browser extension to fill in login&nbsp;credentials</li>\n<li>A way for mobile devices to access&nbsp;passwords</li>\n<li>Tracking of password&nbsp;changes</li>\n<li>Each password&nbsp;generation</li>\n<li>Free and open-source&nbsp;software</li>\n<li>Managing the password store via Unix&nbsp;tools</li>\n</ul>\n<div class=\"section\" id=\"step-1-gpg\">\n<h2>Step 1:&nbsp;<span class=\"caps\">GPG</span></h2>\n<p>We are going to use <span class=\"caps\">GPG</span> to encrypt our passwords at rest.  This has the\nadvantage of not having to remember encryption passphrases.  If you encrypt\nyour passwords to your own key, only you can ever decrypt&nbsp;it.</p>\n<p>For a modern <span class=\"caps\">GPG</span> workflow, I recommend using a YubiKey to store your private\nkeys.  YubiKeys can be used as a SmartCard, meaning that your private <span class=\"caps\">GPG</span> key\ncan be stored on the key.  Moving your private key to the YubiKey is a\ndestructive process which means that the key cannot be extracted from it.  It\nalso means that all operations which require your private key are performed on\nthe&nbsp;SmartCard.</p>\n<p>There is an excellent <a class=\"reference external\" href=\"https://github.com/drduh/YubiKey-Guide\">guide</a> on how to set it up.  It walks you through\ngenerating your <span class=\"caps\">GPG</span> keys on an air-gapped computer running a live version of\n<a class=\"reference external\" href=\"https://tails.boum.org/\">Tails</a> Linux.  You create a master private key which is stored offline in a\nsecure place, and multiple subkeys which are used for day-to-day&nbsp;operations.</p>\n<p>Paul Stamatiou has a great <a class=\"reference external\" href=\"https://paulstamatiou.com/getting-started-with-security-keys/\">article</a> on getting started with security keys in&nbsp;general.</p>\n<p>All of this means that your computer can only use your private key if your\nYubiKey is plugged&nbsp;in.</p>\n</div>\n<div class=\"section\" id=\"step-2-pass\">\n<h2>Step 2:&nbsp;pass</h2>\n<p>The next piece of the puzzle is the password store itself.  For this, we will\nuse <a class=\"reference external\" href=\"https://www.passwordstore.org/\">pass</a>.  This is a Unix command-line program which stores your passwords\nin a directory on your filesystem as <span class=\"caps\">GPG</span>-encrypted plain text files.  By\ndefault, everything lives in <tt class=\"docutils literal\"><span class=\"pre\">$<span class=\"caps\">HOME</span>/.password-store</span></tt>, and you can organize\nyour passwords into directories.  The <tt class=\"docutils literal\">pass</tt> program then handles encrypting\nand decrypting on the&nbsp;fly.</p>\n<p>It also has a nice feature which makes it easy to move your passwords to your\nphone.  Most of the time, you only need the password to set up an app, and\nafter that the app maintains a session.  Pass can show you a <span class=\"caps\">QR</span> code\nrepresentation of your password which you can scan with your smartphone&#8217;s\ncamera to place it in the phone&#8217;s&nbsp;clipboard.</p>\n<p>Optionally, <tt class=\"docutils literal\">pass</tt> can initialize a git repository inside its password store\ndirectory, and create a git commit for each password modification or\nmanipulation&nbsp;operation.</p>\n<p>Pass is also free and open source&nbsp;(<span class=\"caps\">GPL</span>).</p>\n</div>\n<div class=\"section\" id=\"step-3-passff\">\n<h2>Step 3:&nbsp;passff</h2>\n<p>Copying passwords from the terminal and pasting them into login forms in the\nbrowser isn&#8217;t very smooth.  There is a project called <a class=\"reference external\" href=\"https://github.com/passff/passff\">passff</a> which\nintegrates <tt class=\"docutils literal\">pass</tt> into Firefox.  This consists of a browser extension, and a\nsimple Firefox web service which handles communication with your password\nstore.  When you need to log in, Firefox can look up the correct password for\nthat entity, and fill in the form for&nbsp;you.</p>\n</div>\n<div class=\"section\" id=\"step-4-backups\">\n<h2>Step 4:&nbsp;backups</h2>\n<p>It&#8217;s trivial to back up your passwords.  Currently, I use <tt class=\"docutils literal\">tar</tt> to create a\nbundle of my password store, and encrypt it and sign it with my private <span class=\"caps\">GPG</span>\nkey.  This encrypted file can then be safely placed in your favorite regular&nbsp;pipeline.</p>\n</div>\n</div>\n", 
    "date_iso": "2019-12-04", 
    "title": "Password Management For a More Civilized Age", 
    "url": "/2019/12/password-management-for-a-more-civilized-age", 
    "day": "04", 
    "categories": [
        {
            "name": "passwords", 
            "slug": "passwords"
        }
    ]
}