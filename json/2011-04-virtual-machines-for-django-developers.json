{
    "reading_time": "2 minutes", 
    "month": "04", 
    "year": "2011", 
    "date": "April 19, 2011", 
    "slug": "virtual-machines-for-django-developers", 
    "contents": "<div class=\"section\" id=\"virtual-machines-for-django-developers\">\n<h1>Virtual machines for Django&nbsp;developers</h1>\n<p><a class=\"reference external\" href=\"http://vagrantup.com\">Vagrant</a> is a tool for building and distributing virtualized\ndevelopment environments. It&#8217;s based on VirtualBox VMs. This article describes\nhow this Ruby tool can be useful to Django&nbsp;developers.</p>\n<div class=\"section\" id=\"why-vagrant\">\n<h2>Why&nbsp;vagrant?</h2>\n<p>The modern web developer works on many different projects. Each project has a\nunique set of requirements, dependencies and package versions needed for that\nproject to succeed. Keeping all of these libraries in check is difficult.\n<tt class=\"docutils literal\">virtualenv</tt> is a tool that creates isolated environments for Python\npackages. Vagrant takes this approach a step further. You can virtualize the\nentire&nbsp;server.</p>\n<p>Just as each Django project will have a <tt class=\"docutils literal\">requirements.txt</tt> file which lists\nthe project&#8217;s <tt class=\"docutils literal\">pip</tt> dependencies, your project will now have a\n<tt class=\"docutils literal\">Vagrantfile</tt> and a <tt class=\"docutils literal\">cookbooks</tt> directory. The <tt class=\"docutils literal\">Vagrantfile</tt> describes\nhow the <span class=\"caps\">VM</span> should be created and the <tt class=\"docutils literal\">cookbooks</tt> directory contains\ninstructions on what packages to install. For example, in the <tt class=\"docutils literal\">Vagrantfile</tt>\nyou will specify a <span class=\"caps\">VM</span> which runs an Ubuntu server with <span class=\"caps\">256MB</span> of <span class=\"caps\">RAM</span> and your\n<tt class=\"docutils literal\">cookbooks</tt> directory will tell vagrant to install apache2, git, postgresql\nand&nbsp;memcached.</p>\n<p>Getting started with vagrant is&nbsp;simple.</p>\n</div>\n<div class=\"section\" id=\"getting-started\">\n<h2>Getting&nbsp;started</h2>\n<p>vagrant is distributed as a Ruby gem and you can install it like&nbsp;so:</p>\n<div class=\"highlight\"><pre><span class=\"go\">gem install vagrant</span>\n</pre></div>\n<p>Next, you will download a base box that I made for you. It&#8217;s an Ubuntu 10.10\nserver with minimal&nbsp;configuration.</p>\n<div class=\"highlight\"><pre><span class=\"go\">vagrant box add vagrant-ubuntu http://honza.ca/downloads/vagrant-ubuntu.box</span>\n</pre></div>\n<p>This will take a while so you may want to get a&nbsp;beverage.</p>\n<p>Next, you will create a directory that will hold your project and initialize it\nfor&nbsp;vagrant.</p>\n<div class=\"highlight\"><pre><span class=\"go\">cd ~/Code</span>\n<span class=\"go\">mkdir webapp</span>\n<span class=\"go\">cd webapp</span>\n<span class=\"go\">vagrant init vagrant-ubuntu</span>\n</pre></div>\n<p>This will create a <tt class=\"docutils literal\">Vagrantfile</tt> in that&nbsp;directory.</p>\n<p>And then&nbsp;run</p>\n<div class=\"highlight\"><pre><span class=\"go\">vagrant up</span>\n</pre></div>\n<p>to actually build and boot the environment. This might take a few&nbsp;minutes.</p>\n<p>After this, your environment is running. Your environment is a headless\nvirtualbox instance.  You can <tt class=\"docutils literal\">ssh</tt> into the box by&nbsp;running:</p>\n<div class=\"highlight\"><pre><span class=\"go\">vagrant ssh</span>\n</pre></div>\n<p>You will notice that your project directory (<tt class=\"docutils literal\">webapp</tt>) is mounted inside the\nenvironment under <tt class=\"docutils literal\">/vagrant</tt>. Any changes to either directory will affect the&nbsp;other.</p>\n<p>You can shutdown your environment&nbsp;with</p>\n<div class=\"highlight\"><pre><span class=\"go\">vagrant halt</span>\n</pre></div>\n<p>Destroy it&nbsp;with:</p>\n<div class=\"highlight\"><pre><span class=\"go\">vagrant destroy</span>\n</pre></div>\n</div>\n<div class=\"section\" id=\"provisioning\">\n<h2>Provisioning</h2>\n<p>Next, you will install some packages into the <span class=\"caps\">VM</span>. You will install some common\nDjango packages: PostreSQL, Apache, <span class=\"caps\">WSGI</span>, memcached and&nbsp;git.</p>\n<div class=\"highlight\"><pre><span class=\"go\">cd ~/Code/webapp</span>\n<span class=\"go\">git clone git@github.com:honza/cookbooks.git</span>\n</pre></div>\n<p>This downloads all kinds of cookbooks ready for our use. We will create a\ncustom cookbook inside that directory where we will define what packages we&nbsp;want:</p>\n<div class=\"highlight\"><pre><span class=\"go\">cd cookbooks</span>\n<span class=\"go\">mkdir webapp</span>\n<span class=\"go\">cd webapp</span>\n<span class=\"go\">mkdir recipes</span>\n<span class=\"go\">touch recipes/default.rb</span>\n</pre></div>\n<p>Now open up the <tt class=\"docutils literal\">default.rb</tt> file and enter the&nbsp;following:</p>\n<div class=\"highlight\"><pre><span class=\"n\">require_recipe</span> <span class=\"s2\">&quot;postgresql::server&quot;</span>\n<span class=\"n\">require_recipe</span> <span class=\"s2\">&quot;apache2&quot;</span>\n<span class=\"n\">include_recipe</span> <span class=\"s2\">&quot;apache2::</span><span class=\"si\">#{</span><span class=\"n\">node</span><span class=\"o\">[</span><span class=\"ss\">:django</span><span class=\"o\">][</span><span class=\"ss\">:web_server</span><span class=\"o\">]</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n<span class=\"n\">require_recipe</span> <span class=\"s2\">&quot;git&quot;</span>\n<span class=\"n\">require_recipe</span> <span class=\"s2\">&quot;memcached&quot;</span>\n</pre></div>\n<p>And modify your <tt class=\"docutils literal\">Vagrantfile</tt> to use the&nbsp;cookbooks:</p>\n<div class=\"highlight\"><pre><span class=\"no\">Vagrant</span><span class=\"o\">::</span><span class=\"no\">Config</span><span class=\"o\">.</span><span class=\"n\">run</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">config</span><span class=\"o\">|</span>\n  <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">vm</span><span class=\"o\">.</span><span class=\"n\">box</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;vagrant-ubuntu&quot;</span>\n    <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">vm</span><span class=\"o\">.</span><span class=\"n\">provision</span> <span class=\"ss\">:chef_solo</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">chef</span><span class=\"o\">|</span>\n      <span class=\"n\">chef</span><span class=\"o\">.</span><span class=\"n\">cookbooks_path</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;cookbooks&quot;</span>\n      <span class=\"n\">chef</span><span class=\"o\">.</span><span class=\"n\">add_recipe</span> <span class=\"s2\">&quot;webapp&quot;</span>\n    <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</pre></div>\n<p>For the configuration changes to take effect, you need to&nbsp;run:</p>\n<div class=\"highlight\"><pre><span class=\"go\">vagrant reload</span>\n</pre></div>\n<p><span class=\"caps\">OK</span>, that concludes our quick introduction to Vagrant. I hope you see how this\ncan be beneficial and how simple it is to get&nbsp;started.</p>\n</div>\n</div>\n", 
    "date_iso": "2011-04-19", 
    "title": "Virtual machines for Django developers", 
    "url": "/2011/04/virtual-machines-for-django-developers", 
    "day": "19", 
    "categories": [
        {
            "name": "Code", 
            "slug": "code"
        }, 
        {
            "name": "Django", 
            "slug": "django"
        }
    ]
}