{
    "reading_time": "2 minutes", 
    "month": "02", 
    "year": "2012", 
    "date": "February 04, 2012", 
    "slug": "how-not-to-depend-on-pypi", 
    "contents": "<div class=\"section\" id=\"how-not-to-depend-on-pypi\">\n<h1>How not to depend on&nbsp;PyPI</h1>\n<p>When deploying a Django application, you often use a <tt class=\"docutils literal\">requirements.txt</tt> file\nthat contains a list of the application&#8217;s dependencies. During deployment, your\nprovisioning system will <tt class=\"docutils literal\">pip install</tt> all of those to make sure that your\napplication runs as&nbsp;desired.</p>\n<p>The format of a typical <tt class=\"docutils literal\">requirements.txt</tt> files isn&#8217;t unlike the&nbsp;following</p>\n<pre class=\"literal-block\">\ndjango==1.3.1\npsycopg2==2.4.4\nFabric==1.3.3\n...\n</pre>\n<p>By default, <tt class=\"docutils literal\">pip</tt> will go to the <a class=\"reference external\" href=\"http://pypi.python.org\">Python Package Index</a> (PyPI) and look for\nthat package&nbsp;there.</p>\n<p>Unfortunately, PyPI has been known to be down or slow at times; and you want\nyour deployments to be as smooth as&nbsp;possible.</p>\n<div class=\"section\" id=\"what-you-can-do\">\n<h2>What you can&nbsp;do</h2>\n<p>Instead of depending on PyPI for a production application, you can host the\npackages that your application needs yourself. It&#8217;s actually surpringly easy to\ndo. Your existing deployment strategy can easily be modified to remove the&nbsp;dependency.</p>\n<p>First, we will create a freeze of your requirements. This will look into your\nenvironment and figure out which version of which package you will need for the\nproduction&nbsp;environment.</p>\n<pre class=\"literal-block\">\n$ pip freeze -r requirements.txt &gt; freeze.txt\n</pre>\n<p>Once you have the list of packages, you can tell <tt class=\"docutils literal\">pip</tt> to download all the\npackages into a directory without installing&nbsp;them.</p>\n<pre class=\"literal-block\">\n$ pip install -d pypi -r freeze.txt\n</pre>\n<p>This will download all packages from <tt class=\"docutils literal\">freeze.txt</tt> into the <tt class=\"docutils literal\">pypi/</tt>\ndirectory.</p>\n<p>The next step is to upload all these packages to a publicly accessible server\nthat can serve static files. This can anything from S3, Cloudfiles or even\nGithub pages. I like to place all of these packages into a <tt class=\"docutils literal\">packages/</tt>\ndirectory. You will also need a simple index file to go with your packages. All\nthe index file needs to is provide a list of <span class=\"caps\">HTML</span> links to those packages. The\nindex will be used by <tt class=\"docutils literal\">pip</tt> to locate the package source&nbsp;distribution.</p>\n<p>I have put together a simple Fabric task that will read the contents of the\n<tt class=\"docutils literal\">pypi/</tt> directory and create this index file for&nbsp;you.</p>\n<div class=\"highlight\"><pre><span class=\"k\">def</span> <span class=\"nf\">make_index</span><span class=\"p\">():</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">local</span><span class=\"p\">(</span><span class=\"s\">&#39;ls pypi&#39;</span><span class=\"p\">,</span> <span class=\"n\">capture</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">packages</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s\">&#39;</span><span class=\"se\">\\n</span><span class=\"s\">&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">html</span> <span class=\"o\">=</span> <span class=\"s\">&quot;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;</span><span class=\"si\">%s</span><span class=\"s\">&lt;/body&gt;&lt;/html&gt;&quot;</span>\n\n    <span class=\"n\">links</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">package</span> <span class=\"ow\">in</span> <span class=\"n\">packages</span><span class=\"p\">:</span>\n        <span class=\"n\">link</span> <span class=\"o\">=</span> <span class=\"s\">&#39;&lt;a href=&quot;packages/</span><span class=\"si\">%s</span><span class=\"s\">&quot;&gt;</span><span class=\"si\">%s</span><span class=\"s\">&lt;/a&gt;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">package</span><span class=\"p\">,</span> <span class=\"n\">package</span><span class=\"p\">)</span>\n        <span class=\"n\">links</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">link</span><span class=\"p\">)</span>\n\n    <span class=\"n\">links</span> <span class=\"o\">=</span> <span class=\"s\">&#39;</span><span class=\"se\">\\n</span><span class=\"s\">&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">links</span><span class=\"p\">)</span>\n\n    <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s\">&#39;index.html&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;w&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">html</span> <span class=\"o\">%</span> <span class=\"n\">links</span><span class=\"p\">)</span>\n    <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre></div>\n<p>Upload the index file to your server and you&#8217;re ready to deploy. Instead of the&nbsp;usual:</p>\n<pre class=\"literal-block\">\n$ pip install -r requirements.txt\n</pre>\n<p>You will run&nbsp;this:</p>\n<pre class=\"literal-block\">\n$ pip install -r freeze.txt -f http://yourPypiHost.com/index.html --no-index\n</pre>\n<p>This will completely ignore PyPI and only use your index when locating\npackages. This way your deploys will be faster and more&nbsp;reliable.</p>\n</div>\n</div>\n", 
    "date_iso": "2012-02-04", 
    "title": "How not to depend on PyPI", 
    "url": "/2012/02/how-not-to-depend-on-pypi", 
    "day": "04", 
    "categories": [
        {
            "name": "Code", 
            "slug": "code"
        }, 
        {
            "name": "Django", 
            "slug": "django"
        }, 
        {
            "name": "Python", 
            "slug": "python"
        }
    ]
}