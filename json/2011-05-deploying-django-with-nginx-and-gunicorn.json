{
    "reading_time": "2 minutes", 
    "month": "05", 
    "year": "2011", 
    "date": "May 30, 2011", 
    "slug": "deploying-django-with-nginx-and-gunicorn", 
    "contents": "<div class=\"section\" id=\"deploying-django-with-nginx-and-gunicorn\">\n<h1>Deploying Django with nginx and&nbsp;gunicorn</h1>\n<p>The amazing Django <a class=\"reference external\" href=\"https://docs.djangoproject.com/en/1.3/howto/deployment/modwsgi/\">documentation</a> recommends that you use Apache and modwsgi\nto deploy your webapp. While this is certainly not bad advice, you may not want\nto use Apache after all. Apache is a beast that eats up a lot of memory, is\nkind of slow and can&#8217;t handle as much traffic. As a fun alternative, I would\nlike to talk about deploying Django on nginx using the <a class=\"reference external\" href=\"http://gunicorn.org/\">gunicorn</a> web&nbsp;server.</p>\n<p>Just a quick note before we start: this isn&#8217;t an out-there deployment option. I\nspoke to one of the gunicorn developers and was told that every django hosting\ncompany (think ep.io) uses this&nbsp;setup.</p>\n<div class=\"section\" id=\"get-your-server-ready\">\n<h2>Get your server&nbsp;ready</h2>\n<p>I use Rackspace for small, single server web apps. I created an Ubuntu 10.10\ninstance with <span class=\"caps\">256MB</span> of <span class=\"caps\">RAM</span>. Then, I created a user for my app and added my ssh\nkey to <tt class=\"docutils literal\">authorized_keys</tt>. Basic&nbsp;stuff.</p>\n</div>\n<div class=\"section\" id=\"install-nginx\">\n<h2>Install&nbsp;nginx</h2>\n<p>Installing nginx couldn&#8217;t be simpler. Latest stable release is provided via a\nppa&nbsp;repository.</p>\n<div class=\"highlight\"><pre><span class=\"gp\">$</span> sudo apt-get install python-software-properties -y\n<span class=\"gp\">$</span> sudo -s\n<span class=\"gp\">$</span> apt-add-repository ppa:nginx/stable\n<span class=\"gp\">$</span> apt-get update\n<span class=\"gp\">$</span> apt-get install nginx\n<span class=\"gp\">$</span> <span class=\"nb\">exit</span>\n</pre></div>\n</div>\n<div class=\"section\" id=\"project-structure\">\n<h2>Project&nbsp;structure</h2>\n<p>The user under which the app will run is <tt class=\"docutils literal\">webapp</tt>, so I checkout my app in\n<tt class=\"docutils literal\">/home/webapp</tt>.</p>\n<div class=\"highlight\"><pre><span class=\"go\">/home/webapp/app</span>\n<span class=\"go\">/home/webapp/app/static</span>\n<span class=\"go\">/home/webapp/env</span>\n</pre></div>\n<p>Note that I&#8217;m using <tt class=\"docutils literal\">virtualenv</tt> to deploy this&nbsp;app.</p>\n</div>\n<div class=\"section\" id=\"configure-nginx-and-gunicorn\">\n<h2>Configure nginx and&nbsp;gunicorn</h2>\n<p>The following two files can be distributed with your&nbsp;project.</p>\n<p>nginx.conf:</p>\n<div class=\"highlight\"><pre><span class=\"go\">server {</span>\n<span class=\"go\">    listen 80;</span>\n<span class=\"go\">    server_name webapp.org;</span>\n\n<span class=\"go\">    access_log /home/webapp/access.log;</span>\n<span class=\"go\">    error_log /home/webapp/error.log;</span>\n\n<span class=\"go\">    location /static {</span>\n<span class=\"go\">        root /home/webapp/app;</span>\n<span class=\"go\">    }</span>\n\n<span class=\"go\">    location / {</span>\n<span class=\"go\">        proxy_pass http://127.0.0.1:8888;</span>\n<span class=\"go\">    }</span>\n<span class=\"go\">}</span>\n</pre></div>\n<p>Next, I symlinked <tt class=\"docutils literal\">nginx.conf</tt> to the server&#8217;s <tt class=\"docutils literal\"><span class=\"pre\">sites-enabled</span></tt> directory.</p>\n<div class=\"highlight\"><pre><span class=\"gp\">$</span> sudo ln -s /home/webapp/app/nginx.conf /etc/nginx/sites-enable/webapp.org\n</pre></div>\n<p>This sets up nginx to directly serve the applications&#8217;s static files (css, js,\netc.). Everything else is proxied to the gunicorn&nbsp;server.</p>\n<p>Now gunicorn is a Python <span class=\"caps\">HTTP</span> server. It&#8217;s super simple and effective. I\ninstalled it into the app&#8217;s&nbsp;environment.</p>\n<div class=\"highlight\"><pre><span class=\"gp\">$</span> <span class=\"o\">(</span>env<span class=\"o\">)</span> pip install gunicorn\n</pre></div>\n<p>gunicorn.conf.py:</p>\n<div class=\"highlight\"><pre><span class=\"n\">bind</span> <span class=\"o\">=</span> <span class=\"s\">&quot;127.0.0.1:8888&quot;</span>\n<span class=\"n\">logfile</span> <span class=\"o\">=</span> <span class=\"s\">&quot;/home/webapp/gunicorn.log&quot;</span>\n<span class=\"n\">workers</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</pre></div>\n<p>That&#8217;s it! The config files are simple and easy to&nbsp;read.</p>\n</div>\n<div class=\"section\" id=\"running\">\n<h2>Running</h2>\n<p>I then collected all the static files into the <tt class=\"docutils literal\">static</tt> directory:</p>\n<div class=\"highlight\"><pre><span class=\"gp\">$</span> <span class=\"o\">(</span>env<span class=\"o\">)</span> python manage.py collectstatic\n</pre></div>\n<p>I restarted&nbsp;nginx:</p>\n<div class=\"highlight\"><pre><span class=\"gp\">$</span> sudo /etc/init.d/nginx restart\n</pre></div>\n<p>And finally, I ran the <tt class=\"docutils literal\">gunicorn</tt> server:</p>\n<div class=\"highlight\"><pre><span class=\"gp\">$</span> <span class=\"o\">(</span>env<span class=\"o\">)</span> <span class=\"nb\">cd</span> /home/webapp/app\n<span class=\"gp\">$</span> <span class=\"o\">(</span>env<span class=\"o\">)</span> gunicorn_django -D -c gunicorn.conf.py\n</pre></div>\n<p>And I was good to&nbsp;go.</p>\n</div>\n<div class=\"section\" id=\"notes\">\n<h2>Notes</h2>\n<p>You may have to change the permissions on the <tt class=\"docutils literal\">static</tt> directory. Also, the\ncommand above starts <tt class=\"docutils literal\">gunicorn</tt> as a deamon - a better way would be to use a\nmonitoring service to start it. Think <tt class=\"docutils literal\">runit</tt> or <tt class=\"docutils literal\">supervisord</tt>. Also, I\ndidn&#8217;t include any database specific configurations since that&#8217;s indentical to\nan Apache&nbsp;deployment.</p>\n</div>\n</div>\n", 
    "date_iso": "2011-05-30", 
    "title": "Deploying Django with nginx and gunicorn", 
    "url": "/2011/05/deploying-django-with-nginx-and-gunicorn", 
    "day": "30", 
    "categories": [
        {
            "name": "Code", 
            "slug": "code"
        }, 
        {
            "name": "Python", 
            "slug": "python"
        }, 
        {
            "name": "Django", 
            "slug": "django"
        }
    ]
}