<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on Honza Pokorny</title>
    <link>https://honza.ca/categories/javascript/</link>
    <description>Recent content in Javascript on Honza Pokorny</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 02 Nov 2015 11:25:00 -0400</lastBuildDate>
    
	<atom:link href="https://honza.ca/categories/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Language choice</title>
      <link>https://honza.ca/2015/11/language-choice/</link>
      <pubDate>Mon, 02 Nov 2015 11:25:00 -0400</pubDate>
      
      <guid>https://honza.ca/2015/11/language-choice/</guid>
      <description>Warning: this is a rant
Recently, I have made great progress in my journey towards Haskell enlightenment. I finally see how many of the little pieces of the Haskell puzzle fit together. At this point, I feel empowered to go forth and write useful programs. I read through the source of Scotty the web framework the other day, and I was very pleasantly surprised that I understood how it works. I absolutely love Haskell.</description>
    </item>
    
    <item>
      <title>Programming languages in a nutshell</title>
      <link>https://honza.ca/2015/02/programming-languages-in-a-nutshell/</link>
      <pubDate>Wed, 18 Feb 2015 10:34:00 -0400</pubDate>
      
      <guid>https://honza.ca/2015/02/programming-languages-in-a-nutshell/</guid>
      <description>Python, Ruby concurrency lol packaging lol Golang lol if you don&amp;rsquo;t like typing err := y u no generics lol imports Haskell need PhD will never be mainstream Idris only for concating lists Erlang lol syntax Javascript javascript Rust how do I do x this week? Clojure let me know when the program has started running lol if you want to build a secure thing on the web Scala lol if you think this actually improves java PHP which of these 10 fns should I use?</description>
    </item>
    
    <item>
      <title>Building a Lisp to Javascript compiler</title>
      <link>https://honza.ca/2013/05/building-a-lisp-to-javascript-compiler/</link>
      <pubDate>Mon, 13 May 2013 07:14:00 -0300</pubDate>
      
      <guid>https://honza.ca/2013/05/building-a-lisp-to-javascript-compiler/</guid>
      <description>In this post, I&amp;rsquo;m going to show you how I made a Lisp to Javascript compiler. I really enjoy programming in Clojure but have often thought that the JVM isn&amp;rsquo;t always the best platform for scripts due to the slow JVM start-up. So, I decided to implement a simple version of Clojure that compiles to Javascript and can be run on top of nodejs.
Compilers are notoriously hard to understand and therefore make for great mind-bending exercises.</description>
    </item>
    
    <item>
      <title>Large Javascript Application Tips</title>
      <link>https://honza.ca/2012/07/large-javascript-application-tips/</link>
      <pubDate>Mon, 16 Jul 2012 08:13:00 -0300</pubDate>
      
      <guid>https://honza.ca/2012/07/large-javascript-application-tips/</guid>
      <description>This post isn&amp;rsquo;t going to tell you that you should use MVC to structure your application. It isn&amp;rsquo;t going to tell you which framework to use. It&amp;rsquo;s not going to tell you to use CoffeeScript or MongoDB. But I&amp;rsquo;m going to talk about some small helpful things you can do to your Javascript application to make easier to develop and maintain.
Naming Conventions Improperly naming your variables, functions and classes can make it nearly impossible to navigate large portions of existing code.</description>
    </item>
    
    <item>
      <title>Writing Node.js modules</title>
      <link>https://honza.ca/2012/01/writing-node.js-modules/</link>
      <pubDate>Thu, 05 Jan 2012 14:00:00 -0400</pubDate>
      
      <guid>https://honza.ca/2012/01/writing-node.js-modules/</guid>
      <description>To say that node.js has enjoyed a great deal of positive publicity in the last few months would most certainly be an understatement. New node.js-related projects are popping up all over the place, and there seems to be this notion that if you aren&amp;rsquo;t using it you&amp;rsquo;re not cool enough.
Over the Christmas holidays, I sat down to sort out my photo library and I wanted to make a web photo gallery to share the images with family and friends.</description>
    </item>
    
    <item>
      <title>Data-driven javascript applications</title>
      <link>https://honza.ca/2011/10/data-driven-javascript-applications/</link>
      <pubDate>Tue, 25 Oct 2011 11:00:00 -0300</pubDate>
      
      <guid>https://honza.ca/2011/10/data-driven-javascript-applications/</guid>
      <description>Over the last few weeks, I have been trying to think of a way to design medium to large client-heavy web applications. There are many projects and ideas floating around that are meant to help you with this and I have had a look at quite a few of them. I don&amp;rsquo;t mean to say that I found the best one &amp;mdash; just one that I like.
I want to talk about data-driven applications.</description>
    </item>
    
    <item>
      <title>Why you should be using CoffeeScript</title>
      <link>https://honza.ca/2011/04/why-you-should-be-using-coffeescript/</link>
      <pubDate>Mon, 11 Apr 2011 16:45:00 -0300</pubDate>
      
      <guid>https://honza.ca/2011/04/why-you-should-be-using-coffeescript/</guid>
      <description>I&amp;rsquo;m sure you&amp;rsquo;ve heard of CoffeeScript. Everyone is talking about it, it seems. It&amp;rsquo;s a beautiful language with a simple syntax that you use to write Javascript. CoffeeScript compiles to Javascript. Here is why I think you should be using it:
Readability CoffeeScript is designed to be beautiful and readable. There is no unnecessary fluff. Less syntax boilerplate, fewer mistakes. Compare:
// regular javascript var author = &amp;quot;William Shakespeare&amp;quot;; // coffeescript author = &amp;quot;William Shakespeare&amp;quot;  Indentation is also important in CoffeeScript - just like in Python.</description>
    </item>
    
  </channel>
</rss>